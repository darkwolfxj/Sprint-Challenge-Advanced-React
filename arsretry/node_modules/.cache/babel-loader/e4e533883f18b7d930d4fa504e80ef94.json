{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hesit\\\\Desktop\\\\Sprint-Challenge-Advanced-React\\\\arsretry\\\\src\\\\components\\\\Chart.js\";\nimport React from 'react';\nimport Chart from 'chart.js';\n\nclass MyChart extends React.Component {\n  componentDidUpdate() {\n    const playerNames = this.props.data.map(i => i.name);\n    const playerSearches = this.props.data.map(i => i.searches);\n\n    function getRandomColor() {\n      var letters = '0123456789ABCDEF'.split('');\n      let color = '#';\n\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n\n      return color;\n    }\n\n    const colors = playerSearches.map(name => getRandomColor());\n    console.log('This is player names', playerNames);\n    console.log('these are the random colors', colors);\n    let myChart = document.getElementById('myChart').getContext('2d');\n    let playerChart = new Chart(myChart, {\n      type: 'pie',\n      //bar, horizontalBar, pie, line, doughnut, radar, polarArea\n      title: 'Google Searches Per Player',\n      data: {\n        labels: playerNames,\n        datasets: [{\n          label: 'Searches',\n          data: playerSearches,\n          backgroundColor: colors\n        }, {\n          label: 'Player',\n          data: playerNames\n        }]\n      },\n      options: {\n        title: {\n          text: 'Google Searches By Player',\n          position: 'top',\n          display: true\n        },\n        legend: {\n          display: false\n        }\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"canvas\", {\n      \"data-testid\": \"myChart\",\n      id: \"myChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default MyChart;","map":{"version":3,"sources":["C:/Users/hesit/Desktop/Sprint-Challenge-Advanced-React/arsretry/src/components/Chart.js"],"names":["React","Chart","MyChart","Component","componentDidUpdate","playerNames","props","data","map","i","name","playerSearches","searches","getRandomColor","letters","split","color","Math","floor","random","colors","console","log","myChart","document","getElementById","getContext","playerChart","type","title","labels","datasets","label","backgroundColor","options","text","position","display","legend","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAClCC,EAAAA,kBAAkB,GAAG;AAGjB,UAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAA3B,CAApB;AACA,UAAMC,cAAc,GAAG,KAAKL,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACG,QAA3B,CAAvB;;AAEA,aAASC,cAAT,GAA0B;AACtB,UAAIC,OAAO,GAAG,mBAAmBC,KAAnB,CAAyB,EAAzB,CAAd;AACA,UAAIC,KAAK,GAAG,GAAZ;;AACA,WAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA6B;AACzBO,QAAAA,KAAK,IAAIF,OAAO,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;AACH;;AACD,aAAOH,KAAP;AACH;;AACD,UAAMI,MAAM,GAAGT,cAAc,CAACH,GAAf,CAAmBE,IAAI,IAAIG,cAAc,EAAzC,CAAf;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCjB,WAApC;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,MAA3C;AACA,QAAIG,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,UAAnC,CAA8C,IAA9C,CAAd;AACA,QAAIC,WAAW,GAAG,IAAI1B,KAAJ,CAAUsB,OAAV,EAAmB;AACjCK,MAAAA,IAAI,EAAE,KAD2B;AACpB;AACbC,MAAAA,KAAK,EAAE,4BAF0B;AAGjCtB,MAAAA,IAAI,EAAE;AACFuB,QAAAA,MAAM,EAAEzB,WADN;AAEF0B,QAAAA,QAAQ,EAAE,CACV;AACIC,UAAAA,KAAK,EAAE,UADX;AAEIzB,UAAAA,IAAI,EAAEI,cAFV;AAGIsB,UAAAA,eAAe,EAAEb;AAHrB,SADU,EAMV;AACIY,UAAAA,KAAK,EAAE,QADX;AAEIzB,UAAAA,IAAI,EAAEF;AAFV,SANU;AAFR,OAH2B;AAiBrC6B,MAAAA,OAAO,EAAE;AACLL,QAAAA,KAAK,EAAE;AACHM,UAAAA,IAAI,EAAE,2BADH;AAEHC,UAAAA,QAAQ,EAAE,KAFP;AAGHC,UAAAA,OAAO,EAAE;AAHN,SADF;AAMLC,QAAAA,MAAM,EAAE;AACHD,UAAAA,OAAO,EAAE;AADN;AANH;AAjB4B,KAAnB,CAAlB;AA4BH;;AACDE,EAAAA,MAAM,GAAG;AACT,WACC;AAAQ,qBAAY,SAApB;AAA8B,MAAA,EAAE,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAEE;;AAnDgC;;AAsDtC,eAAerC,OAAf","sourcesContent":["import React from 'react';\r\nimport Chart from 'chart.js';\r\n\r\nclass MyChart extends React.Component {\r\n    componentDidUpdate() {\r\n        \r\n        \r\n        const playerNames = this.props.data.map(i => i.name)\r\n        const playerSearches = this.props.data.map(i => i.searches)\r\n        \r\n        function getRandomColor() {\r\n            var letters = '0123456789ABCDEF'.split('');\r\n            let color = '#';\r\n            for (let i = 0; i < 6; i++ ) {\r\n                color += letters[Math.floor(Math.random() * 16)];\r\n            }\r\n            return color;\r\n        }\r\n        const colors = playerSearches.map(name => getRandomColor())\r\n        console.log('This is player names', playerNames)\r\n        console.log('these are the random colors', colors)\r\n        let myChart = document.getElementById('myChart').getContext('2d');\r\n        let playerChart = new Chart(myChart, {\r\n            type: 'pie', //bar, horizontalBar, pie, line, doughnut, radar, polarArea\r\n            title: 'Google Searches Per Player',\r\n            data: {\r\n                labels: playerNames, \r\n                datasets: [ \r\n                {\r\n                    label: 'Searches',\r\n                    data: playerSearches,\r\n                    backgroundColor: colors  \r\n                }, \r\n                {\r\n                    label: 'Player',\r\n                    data: playerNames\r\n                }\r\n                ]\r\n            },\r\n        options: { \r\n            title: { \r\n                text: 'Google Searches By Player',\r\n                position: 'top',\r\n                display: true\r\n            },     \r\n            legend: {\r\n                 display: false\r\n            } \r\n        }\r\n        })\r\n    }\r\n    render() {\r\n    return (\r\n     <canvas data-testid='myChart' id='myChart'></canvas>   \r\n    )}\r\n}\r\n\r\nexport default MyChart "]},"metadata":{},"sourceType":"module"}